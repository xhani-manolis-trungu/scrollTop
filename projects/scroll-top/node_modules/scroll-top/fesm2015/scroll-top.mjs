import * as i0 from '@angular/core';
import { isDevMode, Injectable, Directive, HostListener, Component, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

class ScrollTopService {
    constructor() {
        this.isDevMode = isDevMode();
        this.isWindow = typeof window !== 'undefined';
        this._init = false;
        this.lastY = 0;
        this.ticking = false;
        this.log = (s, ...optional) => s && this.isDevMode && console.log(s, optional);
        this.handleScroll = () => {
            if (!this.ticking) {
                window.requestAnimationFrame(() => {
                    this.updateLastY();
                    this.ticking = false;
                });
                this.ticking = true;
            }
        };
    }
    get currentPositionY() {
        return this._elementToScroll ? this._elementToScroll.scrollTop : window.pageYOffset;
    }
    get info() { return Math.ceil(this.lastY); }
    setDevMode() { this.isDevMode = true; }
    init(elementId) {
        if (this.isWindow) {
            this.destroy();
            this._elementToScroll = null;
            if (elementId) {
                this._elementToScroll = document.querySelector(`#${elementId}`);
            }
            this._host = this._elementToScroll || window;
            this._host.addEventListener('scroll', this.handleScroll);
            this.log(`'NgScrolltopService' to use ${this._elementToScroll ? 'element' : 'window'}`, elementId || '');
        }
        this._init = true;
    }
    destroy() {
        this.isWindow && this._host && this._host.removeEventListener('scroll', this.handleScroll);
    }
    scrollABit(newY) {
        if (this._elementToScroll) {
            this._elementToScroll.scrollTop = newY;
        }
        else {
            window.scroll(0, newY);
        }
    }
    updateLastY() {
        if (!this._init)
            return;
        const newY = this.currentPositionY;
        if (newY !== this.lastY) {
            this.lastY = newY;
        }
    }
}
ScrollTopService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
ScrollTopService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });

const DURATION = 1000;
class ScrollTopDirective {
    constructor(service, ngZone) {
        this.service = service;
        this.ngZone = ngZone;
        this.progress = 0;
        this.easing = (x) => {
            'use strict';
            if (x < 0.5) {
                return Math.pow(x * 2, 2) / 2;
            }
            return 1 - Math.pow((1 - x) * 2, 2) / 2;
        };
        this.scrollABit = this.scrollABit.bind(this);
    }
    onclick() {
        this.startTop = this.service.currentPositionY;
        this.startTime = null;
        this.ngZone.runOutsideAngular(() => { window.requestAnimationFrame(this.scrollABit); });
        this.service.log('NgScrolltopDirective click');
    }
    scrollABit(timestamp) {
        if (!this.startTime) {
            this.startTime = timestamp;
        }
        this.progress = timestamp - this.startTime;
        const percent = (this.progress >= DURATION ? 1 : this.easing(this.progress / DURATION));
        const newY = this.startTop - Math.ceil(this.startTop * percent);
        this.service.scrollABit(newY);
        if (percent < 1) {
            this.ngZone.runOutsideAngular(() => { window.requestAnimationFrame(this.scrollABit); });
        }
    }
}
ScrollTopDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopDirective, deps: [{ token: ScrollTopService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
ScrollTopDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.2.0", type: ScrollTopDirective, selector: "[blScrolltop]", host: { listeners: { "click": "onclick()" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[blScrolltop]'
                }]
        }], ctorParameters: function () { return [{ type: ScrollTopService }, { type: i0.NgZone }]; }, propDecorators: { onclick: [{
                type: HostListener,
                args: ['click']
            }] } });

class ScrollTopComponent {
    constructor(service) {
        this.service = service;
    }
    set elementId(value) {
        this._elementId = value;
        this.service.init(value);
    }
    ngOnInit() {
        this.service.init(this._elementId);
    }
    ngOnDestroy() {
        this.service.destroy();
    }
}
ScrollTopComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopComponent, deps: [{ token: ScrollTopService }], target: i0.ɵɵFactoryTarget.Component });
ScrollTopComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.0", type: ScrollTopComponent, selector: "lib-scroll-top", inputs: { elementId: "elementId" }, ngImport: i0, template: `
    <div class="scroll-top" blScrolltop>
  </div>
  `, isInline: true, dependencies: [{ kind: "directive", type: ScrollTopDirective, selector: "[blScrolltop]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-scroll-top',
                    template: `
    <div class="scroll-top" blScrolltop>
  </div>
  `,
                }]
        }], ctorParameters: function () { return [{ type: ScrollTopService }]; }, propDecorators: { elementId: [{
                type: Input
            }] } });

class ScrollTopModule {
}
ScrollTopModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ScrollTopModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopModule, declarations: [ScrollTopComponent,
        ScrollTopDirective], imports: [CommonModule], exports: [ScrollTopComponent,
        ScrollTopDirective] });
ScrollTopModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopModule, imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: ScrollTopModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ScrollTopComponent,
                        ScrollTopDirective
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        ScrollTopComponent,
                        ScrollTopDirective
                    ]
                }]
        }] });

/*
 * Public API Surface of scroll-top
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ScrollTopComponent, ScrollTopDirective, ScrollTopModule, ScrollTopService };
//# sourceMappingURL=scroll-top.mjs.map
